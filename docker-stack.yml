

services:

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      retries: 5
    networks:
      - kv-net

  kv-node:
    image: kv-node-service:latest
    environment:
      - NODE_ID={{.Task.Slot}}
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - kv-net

  gateway:
    image: gateway-service:latest
    ports:
      - "3000:3000"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - kv-net

  replicator:
    image: replicator-service:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - kv-net

  health-monitor:
    image: health-monitor:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - kv-net

  autoscaler:
    image: autoscaler-service:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SERVICE_NAME=kvstore_kv-node
      - MIN_REPLICAS=1
      - MAX_REPLICAS=10
      - CPU_UPPER_THRESHOLD=30
      - CPU_LOWER_THRESHOLD=20
      - POLL_INTERVAL=5
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - kv-net

# -------- ÚNICA secção networks no nível raiz --------
networks:
  kv-net:
    external: true
